// <auto-generated />
using System;
using EntityArchitect.CRUD.Entities.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace api2025.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251004221535_PostCodes")]
    partial class PostCodes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("api2025.Entity.PostCode", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<Guid>("ProvinceId")
                        .HasColumnType("uuid")
                        .HasColumnName("province_id");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("pk_post_code");

                    b.HasIndex("ProvinceId")
                        .HasDatabaseName("ix_post_code_province_id");

                    b.ToTable("post_code", (string)null);
                });

            modelBuilder.Entity("api2025.Entity.Province", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("pk_province");

                    b.ToTable("province", (string)null);
                });

            modelBuilder.Entity("api2025.Entity.Report", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<decimal>("AccountBalance")
                        .HasColumnType("numeric")
                        .HasColumnName("account_balance");

                    b.Property<bool>("ConsideredSickLeave")
                        .HasColumnType("boolean")
                        .HasColumnName("considered_sick_leave");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<decimal>("ExpectedPension")
                        .HasColumnType("numeric")
                        .HasColumnName("expected_pension");

                    b.Property<decimal>("Pension")
                        .HasColumnType("numeric")
                        .HasColumnName("pension");

                    b.Property<string>("PostalCode")
                        .HasColumnType("text")
                        .HasColumnName("postal_code");

                    b.Property<decimal>("RealPension")
                        .HasColumnType("numeric")
                        .HasColumnName("real_pension");

                    b.Property<decimal>("SalaryAmount")
                        .HasColumnType("numeric")
                        .HasColumnName("salary_amount");

                    b.Property<int>("Sex")
                        .HasColumnType("integer")
                        .HasColumnName("sex");

                    b.Property<decimal>("SubAccountBalance")
                        .HasColumnType("numeric")
                        .HasColumnName("sub_account_balance");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<DateTime>("UsageTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("usage_time");

                    b.HasKey("Id")
                        .HasName("pk_report");

                    b.ToTable("report", (string)null);
                });

            modelBuilder.Entity("api2025.Entity.PostCode", b =>
                {
                    b.HasOne("api2025.Entity.Province", "Province")
                        .WithMany("PostCodes")
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_post_code_province_province_id");

                    b.Navigation("Province");
                });

            modelBuilder.Entity("api2025.Entity.Province", b =>
                {
                    b.Navigation("PostCodes");
                });
#pragma warning restore 612, 618
        }
    }
}
